<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>quill.codes.tips on Quill.Codes</title>
    <link>https://quill.codes/tips/</link>
    <description>Recent content in quill.codes.tips on Quill.Codes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Sep 2020 12:47:44 -0700</lastBuildDate>
    
	<atom:link href="https://quill.codes/tips/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Set Class Fields Using &#39;out&#39; Parameters</title>
      <link>https://quill.codes/tips/set-class-fields-with-out-parameters/</link>
      <pubDate>Thu, 17 Sep 2020 12:47:44 -0700</pubDate>
      
      <guid>https://quill.codes/tips/set-class-fields-with-out-parameters/</guid>
      <description>Did You Know? You can set class fields with &amp;lsquo;out&amp;rsquo; method parameters Whether you like out parameters or not in C#, they are here to stay. They decorate a number of common patterns in the .NET ecosystem.
 The TryParse pattern where the return is a bool that indicates success and your parse result comes from the out parameter.  However, very often you want to set your class field with the parse result.</description>
    </item>
    
    <item>
      <title>Dont Fear the // Todo</title>
      <link>https://quill.codes/tips/dont-fear-the-todo/</link>
      <pubDate>Wed, 16 Sep 2020 13:58:39 -0700</pubDate>
      
      <guid>https://quill.codes/tips/dont-fear-the-todo/</guid>
      <description>Did You Know? Visual Studio tracks your &amp;ldquo;// TODO&amp;rdquo; comments so you can find them later. From within Visual Studio Go to View -&amp;gt; Task List. This will display the Task List window and show you any area of your open Solution. You can even filter down to your Current Project, Current Document, or Open Documents.
It doesn&amp;rsquo;t just recognize // TODO, but will also recognize // HACK What if I Don&amp;rsquo;t Use English?</description>
    </item>
    
  </channel>
</rss>