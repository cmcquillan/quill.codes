<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSharp on Quill.Codes</title>
    <link>https://quill.codes/tags/csharp/</link>
    <description>Recent content in CSharp on Quill.Codes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Sep 2020 12:47:44 -0700</lastBuildDate>
    
	<atom:link href="https://quill.codes/tags/csharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Set Class Fields Using &#39;out&#39; Parameters</title>
      <link>https://quill.codes/tips/set-class-fields-with-out-parameters/</link>
      <pubDate>Thu, 17 Sep 2020 12:47:44 -0700</pubDate>
      
      <guid>https://quill.codes/tips/set-class-fields-with-out-parameters/</guid>
      <description>Did You Know? You can set class fields with &amp;lsquo;out&amp;rsquo; method parameters Whether you like out parameters or not in C#, they are here to stay. They decorate a number of common patterns in the .NET ecosystem.
 The TryParse pattern where the return is a bool that indicates success and your parse result comes from the out parameter.  However, very often you want to set your class field with the parse result.</description>
    </item>
    
    <item>
      <title>Practical Objects: A Beginning Approach to Object Oriented Design</title>
      <link>https://quill.codes/posts/practical-objects-a-beginning-approach-to-object-oriented-design/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://quill.codes/posts/practical-objects-a-beginning-approach-to-object-oriented-design/</guid>
      <description>The Goal of Practical Objects I love programming, but programming is hard and existing paradigms that inflexibly insist upon perfection do not make it easier. This is not to say that paradigms and patterns produce bad code, but certain statements from peers, thought leaders, and friends permeate the space in my head when attempting to solve problems.
 &amp;ldquo;This approach is better because it runs faster&amp;rdquo; &amp;ldquo;This code violates SOLID&amp;rdquo; &amp;ldquo;We should roll our own library instead of using this framework&amp;rdquo;  I took these statements to heart.</description>
    </item>
    
  </channel>
</rss>